dataset,program_name,program,id,cmd_key,dataset_uoa,compile_flag,result
cbench,cbench-automotive-susan-c,cbench-automotive-susan,3,corners,image-pgm-0001,-Os -fno-auto-inc-dec -fno-branch-count-reg -fbranch-probabilities -fbranch-target-load-optimize -fbranch-target-load-optimize2 -fno-btr-bb-exclusive -fno-caller-saves -fcheck-data-deps -fno-combine-stack-adjustments -fcompare-elim -fno-conserve-stack -fcprop-registers -fcrossjumping -fcse-follow-jumps -fcse-skip-blocks -fcx-fortran-rules -fno-cx-limited-range -fdata-sections -fdce -fno-defer-pop -fno-delete-null-pointer-checks -fno-devirtualize -fno-devirtualize-speculatively -fno-dse -fearly-inlining -fexpensive-optimizations -ffast-math -ffinite-math-only -fno-float-store -fno-forward-propagate -ffunction-cse -fno-function-sections -fno-gcse -fgcse-after-reload -fgcse-las -fno-gcse-lm -fgcse-sm -fno-graphite-identity -fno-guess-branch-probability -fno-hoist-adjacent-loads -fno-if-conversion -fno-if-conversion2 -findirect-inlining -finline -fno-inline-functions -fno-inline-functions-called-once -finline-small-functions -fipa-cp -fipa-cp-clone -fipa-pta -fno-ipa-pure-const -fno-ipa-reference -fipa-sra -fira-hoist-pressure -fira-loop-pressure -fira-share-save-slots -fira-share-spill-slots -fno-isolate-erroneous-paths-attribute -fno-isolate-erroneous-paths-dereference -fno-ivopts -fno-keep-inline-functions -fkeep-static-consts -fno-live-range-shrinkage -floop-block -fno-loop-interchange -floop-nest-optimize -fno-loop-parallelize-all -fno-loop-strip-mine -fmath-errno -fmerge-all-constants -fmerge-constants -fno-modulo-sched -fno-modulo-sched-allow-regmoves -fno-move-loop-invariants -fomit-frame-pointer -fno-optimize-sibling-calls -fno-partial-inlining -fno-peel-loops -fpeephole -fno-peephole2 -fno-predictive-commoning -fprefetch-loop-arrays -fno-reciprocal-math -fno-ree -frename-registers -fno-reorder-blocks -freorder-blocks-and-partition -fno-reorder-functions -fno-rerun-cse-after-loop -freschedule-modulo-scheduled-loops -frounding-math -fsched-critical-path-heuristic -fno-sched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic -fno-sched-pressure -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic -fsched-spec-load -fno-sched-spec-load-dangerous -fsched2-use-superblocks -fno-schedule-insns -fno-schedule-insns2 -fno-sel-sched-pipelining -fsel-sched-pipelining-outer-loops -fno-selective-scheduling -fselective-scheduling2 -fshrink-wrap -fno-signaling-nans -fno-signed-zeros -fsingle-precision-constant -fno-split-ivs-in-unroller -fsplit-wide-types -fno-strict-aliasing -fno-strict-overflow -fthread-jumps -ftoplevel-reorder -fno-tracer -ftrapping-math -fno-tree-bit-ccp -fno-tree-builtin-call-dce -ftree-ccp -ftree-ch -fno-tree-coalesce-vars -ftree-copy-prop -ftree-copyrename -fno-tree-dce -fno-tree-dominator-opts -fno-tree-dse -fno-tree-forwprop -fno-tree-fre -ftree-loop-distribute-patterns -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-if-convert-stores -fno-tree-loop-im -fno-tree-loop-ivcanon -ftree-loop-linear -fno-tree-loop-optimize -ftree-loop-vectorize -ftree-partial-pre -ftree-phiprop -ftree-pre -ftree-pta -fno-tree-reassoc -ftree-sink -ftree-slsr -ftree-sra -ftree-switch-conversion -fno-tree-tail-merge -ftree-ter -fno-tree-vectorize -ftree-vrp -funroll-all-loops -fno-unroll-loops -fno-unsafe-loop-optimizations -funsafe-math-optimizations -fno-unswitch-loops -fno-use-linker-plugin -fno-variable-expansion-in-unroller -fno-vect-cost-model -fno-vpt -fweb -fzero-initialized-in-bss -flifetime-dse=1 -fsimd-cost-model=dynamic -fvect-cost-model=unlimited -fira-algorithm=CB -fira-region=all,"{'best_result': 24946, 'compile_flag': '-Os -fno-auto-inc-dec -fno-branch-count-reg -fbranch-probabilities -fbranch-target-load-optimize -fbranch-target-load-optimize2 -fno-btr-bb-exclusive -fno-caller-saves -fcheck-data-deps -fno-combine-stack-adjustments -fcompare-elim -fno-conserve-stack -fcprop-registers -fcrossjumping -fcse-follow-jumps -fcse-skip-blocks -fcx-fortran-rules -fno-cx-limited-range -fdata-sections -fdce -fno-defer-pop -fno-delete-null-pointer-checks -fno-devirtualize -fno-devirtualize-speculatively -fno-dse -fearly-inlining -fexpensive-optimizations -ffast-math -ffinite-math-only -fno-float-store -fno-forward-propagate -ffunction-cse -fno-function-sections -fno-gcse -fgcse-after-reload -fgcse-las -fno-gcse-lm -fgcse-sm -fno-graphite-identity -fno-guess-branch-probability -fno-hoist-adjacent-loads -fno-if-conversion -fno-if-conversion2 -findirect-inlining -finline -fno-inline-functions -fno-inline-functions-called-once -finline-small-functions -fipa-cp -fipa-cp-clone -fipa-pta -fno-ipa-pure-const -fno-ipa-reference -fipa-sra -fira-hoist-pressure -fira-loop-pressure -fira-share-save-slots -fira-share-spill-slots -fno-isolate-erroneous-paths-attribute -fno-isolate-erroneous-paths-dereference -fno-ivopts -fno-keep-inline-functions -fkeep-static-consts -fno-live-range-shrinkage -floop-block -fno-loop-interchange -floop-nest-optimize -fno-loop-parallelize-all -fno-loop-strip-mine -fmath-errno -fmerge-all-constants -fmerge-constants -fno-modulo-sched -fno-modulo-sched-allow-regmoves -fno-move-loop-invariants -fomit-frame-pointer -fno-optimize-sibling-calls -fno-partial-inlining -fno-peel-loops -fpeephole -fno-peephole2 -fno-predictive-commoning -fprefetch-loop-arrays -fno-reciprocal-math -fno-ree -frename-registers -fno-reorder-blocks -freorder-blocks-and-partition -fno-reorder-functions -fno-rerun-cse-after-loop -freschedule-modulo-scheduled-loops -frounding-math -fsched-critical-path-heuristic -fno-sched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic -fno-sched-pressure -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic -fsched-spec-load -fno-sched-spec-load-dangerous -fsched2-use-superblocks -fno-schedule-insns -fno-schedule-insns2 -fno-sel-sched-pipelining -fsel-sched-pipelining-outer-loops -fno-selective-scheduling -fselective-scheduling2 -fshrink-wrap -fno-signaling-nans -fno-signed-zeros -fsingle-precision-constant -fno-split-ivs-in-unroller -fsplit-wide-types -fno-strict-aliasing -fno-strict-overflow -fthread-jumps -ftoplevel-reorder -fno-tracer -ftrapping-math -fno-tree-bit-ccp -fno-tree-builtin-call-dce -ftree-ccp -ftree-ch -fno-tree-coalesce-vars -ftree-copy-prop -ftree-copyrename -fno-tree-dce -fno-tree-dominator-opts -fno-tree-dse -fno-tree-forwprop -fno-tree-fre -ftree-loop-distribute-patterns -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-if-convert-stores -fno-tree-loop-im -fno-tree-loop-ivcanon -ftree-loop-linear -fno-tree-loop-optimize -ftree-loop-vectorize -ftree-partial-pre -ftree-phiprop -ftree-pre -ftree-pta -fno-tree-reassoc -ftree-sink -ftree-slsr -ftree-sra -ftree-switch-conversion -fno-tree-tail-merge -ftree-ter -fno-tree-vectorize -ftree-vrp -funroll-all-loops -fno-unroll-loops -fno-unsafe-loop-optimizations -funsafe-math-optimizations -fno-unswitch-loops -fno-use-linker-plugin -fno-variable-expansion-in-unroller -fno-vect-cost-model -fno-vpt -fweb -fzero-initialized-in-bss -flifetime-dse=1 -fsimd-cost-model=dynamic -fvect-cost-model=unlimited -fira-algorithm=CB -fira-region=all', 'result_list': [{'best_result': 25246, 'value': [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], 'generations': 0}, {'best_result': 26068, 'value': [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 'generations': 1}, {'best_result': 24814, 'value': [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 'generations': 2}, {'best_result': 24338, 'value': [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 'generations': 3}, {'best_result': 24186, 'value': [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 'generations': 4}, {'best_result': 24102, 'value': [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 'generations': 5}, {'best_result': 23858, 'value': [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 'generations': 6}, {'best_result': 24778, 'value': [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 'generations': 7}, {'best_result': 25118, 'value': [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 'generations': 8}, {'best_result': 24946, 'value': [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], 'generations': 9}]}"
